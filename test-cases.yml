---
- summary: |
    Проверка на кроссбраузерность
  requirement: |
    При открытии на разных браузерах, страниц должна корректно отображаться
  prerequisites:
    Должны быть установлены браузеры Google Chrome, Microsoft Edge, Mozila Firefox, Safari
  test-data: |
    https://codebattle.hexlet.io/
  steps:
    - Вводим адрес в Google Chrome
    - Вводим адрес в Microsoft Edge
    - Вводим адрес в Mozila Firefox
    - Вводим адрес в Safari
  expected-result: |
    Должна открыться страница во всех браузерах
    
- summary: |
    Проверка регистриции
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Логин = pro0o Пароль = QwertY123 email = neruski@hot.ee
  steps:
    - Нажимаем кнопку «Sign Up»
    - Вводим логин
    - Вводим email
    - Вводим пароль 2 раза
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу
    
- summary: |
    Проверка входа пользователя с существующими логином и паролем
  requirement: |
    При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Тестовые данные
    Логин = neruski@hot.ee Пароль = QwertY123
  steps:
    - Вводим email
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка входа пользователя с несуществующими логином и паролем
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Логин = pro@hot.ee Пароль = qwerty
  steps:
    - Вводим email
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен не попасть на главную страницу

- summary: |
    Проверка входа пользователя через аккаунт GitHub
  requirement: |
    При нажатии на кнопку "Sing in with GitHub" должен зайти на зайт с этим аккаунтом
  prerequisites: |
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Кнопка "Sing in with GitHub"
  steps: 
    - Нажимаем кнопку "Sing in with GitHub"
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка входа пользователя через аккаунт Discord
  requirement: |
    При нажатии на кнопку "Sing in with Discord" должен зайти на зайт с этим аккаунтом
  prerequisites: |
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Кнопка "Sing in with Discord"
  steps:
    - Нажимаем кнопку "Sing in with Discord"
  expected-result: |
    Пользователь должен попасть на главную страницу
    
- summary: |
    Проверка возможности запустить быструюю игру без регистрации
  requirement: |
    При нажатии на кнопку "Try simple battle" должен запуститься бой с комьютером
  prerequisites: |
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Кнопка "Try simple battle"
  steps:
    - Нажимаем кнопку "Try simple battle"
  expected-result: |
    Пользователь должен попасть в режим игры с компьютером без регистрации

- summary: |
    Проверка возможности вернуться на главную страницу 
  requirement: |
    При нажатии на логотип "Codebattle by Hexlet's community" должен выйти на главную страницу сайта
  prerequisites: |
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Логотип "Codebattle by Hexlet's community"
  steps:
    - Нажимаем кнопку "Try simple battle"
    - Надимаем логотип "Codebattle by Hexlet's community"
  expected-result: |
    Пользователь должен попасть на главную страницу сайта

- summary: |
    Проверка сортировки "Leaderboard"
  requirement: |
    При нажатии на кнопки "WEEK/MONTH/ALL" должно сортироваться лидерство по недели/месяцу/общей
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    кнопки "WEEK/MONTH/ALL"
  steps:
    - Нажимаем кнопку "WEEK"
    - Нажимаем кнопку "MONTH"
    - Нажимаем кнопку "ALL"
  expected-result: |
    При нажатии этих кнопок должен сортироваться список лидеров по недели/месяцу/общей

- summary: |
    Проверка возможности перейти на  "TOP list"
  requirement: |
    При нажатии на кнопку "TOP list" должно перевести на страницу лидеров
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    кнопки "TOP list"
  steps:
    - Нажимаем кнопку "TOP list"
  expected-result: |
    При нажатии этой кнопки должно перевести на страницу лидеров

- summary: |
    Проверка возможности сортировать лидерство пользователей на "TOP list" с ботами и без них
  requirement: |
    Когда ставишь галочку на "With bots"  должны в списке лидерства появляться боты, а при удалении галочки 
    должен оставаться список только с пользователями
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    фильтрация "With bots"
  steps:
    - Нажимаем кнопку "TOP list"
    - Ставим галочку на "With bots"
    - Убираем галочку с "With bots"
  expected-result: |
    При выполнении этой фильтрации в списке лидеров должны появляться боты и потом пропадать при сбросе этого фильтра

- summary: |
    Проверка возможности сортировать кол-во пользователей на "TOP list"
  requirement: |
    При нажатии на кнопки из списка "20/30/40/50" должно выдавать список лидеров по этому кол-ву
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    кнопки из списка "20/30/40/50"
  steps:
    - Нажимаем кнопку "TOP list"
    - Выбираем из списка "30"
    - Выбираем из списка "40"
    - Выбираем из списка "50"
    - Выбираем из списка "20"
  expected-result: |
    При нажатии этих кнопок должно выдаваться то количество строк в списке которое ты выбрал 

- summary: |
    Проверка возможности сортировать список лидеров на "TOP list" по дате регистрации 
  requirement: |
    При нажатии на кнопки "Joined" должен сортироваться список от последней даты регистрации к первой,
    при нажатии 2ой раз, должен сортировать от первой к последней
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    кнопка "Joined"
  steps:
    - Нажимаем кнопку "TOP list"
    - кнопка "Joined" 1ый раз
    - кнопка "Joined" 2ой раз
  expected-result: |
    При нажатии этих кнопок должен сортироваться список лидеров сначала от последних дат регистрации, потом от первых

- summary: |
    Проверка возможности сортировать список лидеров на "TOP list" по кол-ву проведенных игр 
  requirement: |
    При нажатии на кнопки "Games played" должен сортироваться список от наименьшего кол-ва проведенных игр к наибольшему,
    при нажатии 2ой раз, должен сортировать в обратную сторону
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    кнопка "Games played"
  steps:
    - Нажимаем кнопку "TOP list"
    - кнопка "Games played" 1ый раз
    - кнопка "Games played" 2ой раз
  expected-result: |
    При нажатии этих кнопок должен сортироваться список лидеров сначала от наименьшего кол-ва проведенных игр,
    потом от наибольшего кол-ва проведенных игр 

- summary: |
    Проверка возможности сортировать список лидеров на "TOP list" по реитингу  
  requirement: |
    При нажатии на кнопки "Rating" должен сортироваться список от наименьшего рейтинга к наибольшему,
    при нажатии 2ой раз, должен сортировать в обратную сторону
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    кнопка "Rating"
  steps:
    - Нажимаем кнопку "TOP list"
    - кнопка "Rating" 1ый раз
    - кнопка "Rating" 2ой раз
  expected-result: |
    При нажатии этих кнопок должен сортироваться список лидеров сначала от наименьшего рейтинга,
    потом от наибольшего рейтинга 

- summary: |
    Проверка возможности сортировать список лидеров на "TOP list" по "Rank"  
  requirement: |
    При нажатии на кнопки "Rank" должен сортироваться список от первого места к последнему,
    при нажатии 2ой раз, должен сортировать в обратную сторону
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    кнопка "Rank"
  steps:
    - Нажимаем кнопку "TOP list"
    - кнопка "Rank" 1ый раз
    - кнопка "Rank" 2ой раз
  expected-result: |
    При нажатии этих кнопок должен сортироваться список лидеров сначала от первого,
    потом от последнего места

- summary: |
    Проверка возможности на "TOP list" использовать поисковик по введению конкретного ника
  requirement: |
    При введении конкретного ника должен найти именно его
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Поиск ника pro0om
  steps:
    - Нажимаем кнопку "TOP list"
    - Вводим ник "pro0om" в поисковик
  expected-result: |
    Должен выдать именно этого пользователя

- summary: |
    Проверка возможности на "TOP list" использовать поисковик по введению первых букв ника
  requirement: |
    При введении 3 букв ника должен выдавать список ников, которые содержат эти буквы
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Поиск "pro"
  steps:
    - Нажимаем кнопку "TOP list"
    - Вводим "pro" в поисковик
  expected-result: |
    Должен выдать список ников которые содержат эти буквы

- summary: |
    Проверка возможности на "TOP list" перейти на страницу аккауна в GitHub 
  requirement: |
    При нажатии на логотип "GitHub" , который находится справа в списке лидеров у каждого учасника,
    должно перейти на личную страницу его владельца
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    логотип "GitHub"
  steps:
    - Нажимаем кнопку "TOP list"
    - Нажимаем логотип "GitHub"
  expected-result: |
    Должен перейти на страницу GitHub владельца этого аккаунта

- summary: |
    Проверка возможности на "TOP list" выбирать последнюю страницу учасников
  requirement: |
    При нажатии на кнопку ">>" должен перекинуть на последнюю страницу учасников
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Кнопка ">>"
  steps:
    - Нажимаем кнопку "TOP list"
    - Нажимаем кнопку ">>"
  expected-result: |
    Должен перейти на последнюю страницу учасников

- summary: |
    Проверка возможности на "TOP list" выбирать первую страницу учасников
  requirement: |
    При нажатии на кнопку "<<" должен перекинуть на первую страницу учасников
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    Кнопка "<<"
  steps:
    - Нажимаем кнопку "TOP list"
    - Нажимаем кнопку "5"
    - Нажимаем кнопку "<<"
  expected-result: |
    Должен сначала перейти на "5" страницу учасников и потом вернуться на первую

- summary: |
    Проверка возможности на "TOP list" перейти на конкретный аккаунт
  requirement: |
    При нажатии на аккаунт "pro0om" должен перекинуть на его личную страницу статистики
  prerequisites: |
    Произведен вход на аккаунт
    Открыта страница https://codebattle.hexlet.io/
  test-data: |
    аккаунт "pro0om"
  steps:
    - Нажимаем кнопку "TOP list"
    - Вводим в поисковик "pro0om"
    - Нажимаем на ссылку аккаунта "pro0om"
  expected-result: |
    Должен перейти на страницу "My Profile" аккаунта "pro0om"
